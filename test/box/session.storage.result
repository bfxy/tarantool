print('session.storage')
---
...
env = require('test_run')
---
...
test_run = env.new('localhost')
---
...
session = box.session
---
...
dump = function(data) return "'" .. require('json').encode(data) .. "'" end
---
...
type(session.id())
---
- number
...
session.unknown_field
---
- null
...
type(session.storage)
---
- table
...
session.storage.abc = 'cde'
---
...
session.storage.abc
---
- cde
...
all = getmetatable(session).aggregate_storage
---
...
dump(all)
---
- '''[null,{"abc":"cde"}]'''
...
test_run:cmd("create connection second to default")
---
- true
...
test_run:cmd("set connection second")
---
- true
...
type(session.storage)
---
- table
...
type(session.storage.abc)
---
- nil
...
session.storage.abc = 'def'
---
...
session.storage.abc
---
- def
...
test_run:cmd("set connection default")
---
- true
...
session.storage.abc
---
- cde
...
test_run:cmd("set connection second")
---
- true
...
dump(all[session.id()])
---
- '''{"abc":"def"}'''
...
test_run:cmd("set connection default")
---
- true
...
dump(all[session.id()])
---
- '''{"abc":"cde"}'''
...
tres1 = {}
---
...
tres2 = {}
---
...
for k,v in pairs(all) do table.insert(tres1, v.abc) end
---
...
test_run:cmd("drop connection second")
---
- true
...
require('fiber').sleep(.01)
---
...
for k,v in pairs(all) do table.insert(tres2, v.abc) end
---
...
table.sort(tres1)
---
...
table.sort(tres2)
---
...
dump(tres1)
---
- '''["cde","def"]'''
...
dump(tres2)
---
- '''["cde","def"]'''
...
getmetatable(session).aggregate_storage = {}
---
...
session = nil
---
...
